// Code generated by thriftgo (0.3.2). DO NOT EDIT.

package user

import (
	"context"
	"fmt"
)

type Request struct {
	Name string `thrift:"Name,1,required" frugal:"1,required,string" json:"Name"`
}

func NewRequest() *Request {
	return &Request{}
}

func (p *Request) InitDefault() {
	*p = Request{}
}

func (p *Request) GetName() (v string) {
	return p.Name
}
func (p *Request) SetName(val string) {
	p.Name = val
}

func (p *Request) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Request(%+v)", *p)
}

type User struct {
	ID   string `thrift:"ID,1,required" frugal:"1,required,string" json:"ID"`
	Name string `thrift:"Name,2,required" frugal:"2,required,string" json:"Name"`
	Age  int32  `thrift:"Age,3,required" frugal:"3,required,i32" json:"Age"`
}

func NewUser() *User {
	return &User{}
}

func (p *User) InitDefault() {
	*p = User{}
}

func (p *User) GetID() (v string) {
	return p.ID
}

func (p *User) GetName() (v string) {
	return p.Name
}

func (p *User) GetAge() (v int32) {
	return p.Age
}
func (p *User) SetID(val string) {
	p.ID = val
}
func (p *User) SetName(val string) {
	p.Name = val
}
func (p *User) SetAge(val int32) {
	p.Age = val
}

func (p *User) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("User(%+v)", *p)
}

type UserService interface {
	GetUser(ctx context.Context, req *Request) (r *User, err error)
}
